server:
  servlet:
    context-path: /user-service
  port: 8081
app:
  name: user
  security:
    authentication:
      ## You can type `openssl rand -base64 64` on your command line to generate a 512 bits one
      base64-secret: khj4hl9AQuiG3hh/r8m0Toecjb5FR/ziPGCMf7uZx2FAr0kjkHCODd/ZGxOX1pF59rpjOjAo3t2zB3T9oZ0HwA==
    content-security-policy: "default-src 'self'; frame-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://storage.googleapis.com; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:"
#    cors:
#      allowed-origins: "http://localhost:8100,http://localhost:9000"
#      allowed-methods: "*"
#      allowed-headers: "*"
#      exposed-headers: "Authorization,Link,X-Total-Count,X-${app.name}-alert,X-${app.name}-error,X-${app.name}-params"
#      allow-credentials: true
#      max-age: 1800

## MySQL
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/sampleapplication?allowPublicKeyRetrieval=true&useSSL=false
    username: sampleApplication
    password: password
    driver-class-name: com.mysql.jdbc.Driver
  ## JPA
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect

feign:
  client:
    role:
      url: http://localhost:8082/role-service
